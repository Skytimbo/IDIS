modules = ["python-3.11", "postgresql-16"]

[nix]
channel = "stable-24_05"
packages = ["bash", "cacert", "cargo", "fontconfig", "freetype", "ghostscript", "glib", "glibcLocales", "gumbo", "harfbuzz", "jbig2dec", "lcms2", "libffi", "libiconv", "libimagequant", "libjpeg", "libjpeg_turbo", "libtiff", "libwebp", "libxcrypt", "mupdf", "nano", "openjpeg", "pango", "pkg-config", "rustc", "swig", "tcl", "tesseract", "tk", "xcbuild", "xcodebuild", "zlib"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Run Context Store Tests"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Run IDIS Demo"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Run IDIS Pipeline Demo"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Run IDIS Demo with PDF Output"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Run Watcher Service Demo"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Production Watcher Service"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "QuantaIQ UI - Production"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "QuantaIQ UI - Search Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Run Main App (Correct Paths)"

[[workflows.workflow]]
name = "Run Context Store Tests"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -m unittest discover tests"

[[workflows.workflow]]
name = "Run IDIS Demo"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python run_idis_pipeline.py --create-docs --clean --openai"

[[workflows.workflow]]
name = "Run IDIS Pipeline Demo"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python demo_idis_pipeline.py --clean --openai"

[[workflows.workflow]]
name = "Run IDIS Demo with PDF Output"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python demo_idis_pipeline.py --clean --openai --output-pdf ./demo_output.pdf"

[[workflows.workflow]]
name = "Run Watcher Service Demo"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python watcher_service.py --watch-folder ./demo_watch --inbox-folder ./demo_inbox --holding-folder ./demo_holding --archive-folder ./demo_archive --cover-sheets-folder ./demo_coversheets --db-path ./watcher_demo.db --openai"

[[workflows.workflow]]
name = "Production Watcher Service"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "./start_production_watcher.sh"

[[workflows.workflow]]
name = "QuantaIQ UI - Production"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd quanta_ui && echo \"\" | streamlit run app.py --server.port 5000 --server.address 0.0.0.0 --server.enableCORS false --server.enableWebsocketCompression false"
waitForPort = 5000

[[workflows.workflow]]
name = "QuantaIQ UI - Search Test"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd modules && streamlit run search_ui.py --server.port 5000 --server.address 0.0.0.0 --server.enableCORS false --server.enableWebsocketCompression false"
waitForPort = 5000

[[workflows.workflow]]
name = "Run Main App (Correct Paths)"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "streamlit run app.py --server.port 8501 --server.address 0.0.0.0 -- --database-path production_idis.db --archive-path data/idis_archive"
waitForPort = 8501

[deployment]
run = ["sh", "-c", "python -m unittest discover tests"]
deploymentTarget = "cloudrun"

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8501
externalPort = 3000
